create or replace TABLE SNOWFLAKE_POC.PUBLIC.ORDERS_BY_CUSTOMER (
	OC_ORDERKEY NUMBER(38,0),
	OC_CUSTKEY NUMBER(38,0),
	OC_ORDERSTATUS VARCHAR(1),
	OC_TOTALPRICE NUMBER(12,2),
	OC_ORDERDATE DATE,
	OC_ORDERPRIORITY VARCHAR(15),
	OC_CLERK VARCHAR(15),
	OC_SHIPPRIORITY NUMBER(38,0),
	OC_COMMENT VARCHAR(79),
    OC_NAME VARCHAR(25),
    OC_PHONE VARCHAR(15)
);

INSERT INTO ORDERS_BY_CUSTOMER
    SELECT
    O.O_ORDERKEY,
	O.O_CUSTKEY,
	O.O_ORDERSTATUS,
	O.O_TOTALPRICE,
	O.O_ORDERDATE,
	O.O_ORDERPRIORITY,
	O.O_CLERK,
	O.O_SHIPPRIORITY,
	O.O_COMMENT,
    C.C_NAME,
    C.C_PHONE
    FROM ORDERS AS O
    JOIN CUSTOMER AS C ON O.O_CUSTKEY=C.C_CUSTKEY;

    
SELECT * FROM ORDERS_BY_CUSTOMER LIMIT 10;

CREATE OR REPLACE STREAM ORDERS_STREAM ON TABLE ORDERS;

SHOW STREAMS;

DESC STREAM ORDERS_STREAM;

SELECT * FROM ORDERS_STREAM;

SELECT * FROM ORDERS LIMIT 10;

UPDATE ORDERS
SET O_ORDERSTATUS = 'F'
WHERE O_ORDERKEY = 1601569;

MERGE INTO ORDERS_BY_CUSTOMER OC
USING ( SELECT OS.*, C.*
    FROM ORDERS_STREAM OS
    JOIN CUSTOMER C
    ON OS.O_CUSTKEY=C.C_CUSTKEY
    ) O
ON OC.OC_ORDERKEY=O.O_ORDERKEY
WHEN MATCHED                        -- DELETE condition
    AND O.METADATA$ACTION ='DELETE' 
    AND O.METADATA$ISUPDATE = 'FALSE'
    THEN DELETE                   
WHEN MATCHED                        -- UPDATE condition
    AND O.METADATA$ACTION ='INSERT' 
    AND O.METADATA$ISUPDATE  = 'TRUE'       
    THEN UPDATE 
    SET OC.OC_CUSTKEY=O.O_CUSTKEY,
	    OC.OC_ORDERSTATUS=O.O_ORDERSTATUS,
	    OC.OC_TOTALPRICE=O.O_TOTALPRICE,
	    OC.OC_ORDERDATE=O.O_ORDERDATE,
	    OC.OC_ORDERPRIORITY=O.O_ORDERPRIORITY,
	    OC.OC_CLERK=O.O_CLERK,
	    OC.OC_SHIPPRIORITY=O.O_SHIPPRIORITY,
	    OC.OC_COMMENT=O.O_COMMENT
WHEN NOT MATCHED
    AND O.METADATA$ACTION ='INSERT'
    THEN INSERT 
    (
    OC_ORDERKEY,
    OC_CUSTKEY,
    OC_ORDERSTATUS,
	OC_TOTALPRICE,
	OC_ORDERDATE,
	OC_ORDERPRIORITY,
	OC_CLERK,
	OC_SHIPPRIORITY,
	OC_COMMENT,
    OC_NAME,
    OC_PHONE
    )
    VALUES
    (
    O.O_ORDERKEY,
    O.O_CUSTKEY,
    O.O_ORDERSTATUS,
	O.O_TOTALPRICE,
	O.O_ORDERDATE,
	O.O_ORDERPRIORITY,
	O.O_CLERK,
	O.O_SHIPPRIORITY,
	O.O_COMMENT,
    O.C_NAME,
    O.C_PHONE
    );

    SELECT * FROM ORDERS_BY_CUSTOMER WHERE OC_ORDERKEY=1601569;
    DELETE FROM ORDERS WHERE O_ORDERKEY=1601569;



CREATE OR REPLACE TASK ALL_DATA_CHANGES
    WAREHOUSE = COMPUTE_WH
    SCHEDULE = '1 MINUTE'
    WHEN SYSTEM$STREAM_HAS_DATA('ORDERS_STREAM')
    AS 
    MERGE INTO ORDERS_BY_CUSTOMER OC
    USING ( SELECT OS.*, C.*
        FROM ORDERS_STREAM OS
        JOIN CUSTOMER C
        ON OS.O_CUSTKEY=C.C_CUSTKEY
        ) O
    ON OC.OC_ORDERKEY=O.O_ORDERKEY
    WHEN MATCHED                        -- DELETE condition
        AND O.METADATA$ACTION ='DELETE' 
        AND O.METADATA$ISUPDATE = 'FALSE'
        THEN DELETE                   
    WHEN MATCHED                        -- UPDATE condition
        AND O.METADATA$ACTION ='INSERT' 
        AND O.METADATA$ISUPDATE  = 'TRUE'       
        THEN UPDATE 
        SET OC.OC_CUSTKEY=O.O_CUSTKEY,
    	    OC.OC_ORDERSTATUS=O.O_ORDERSTATUS,
    	    OC.OC_TOTALPRICE=O.O_TOTALPRICE,
    	    OC.OC_ORDERDATE=O.O_ORDERDATE,
    	    OC.OC_ORDERPRIORITY=O.O_ORDERPRIORITY,
    	    OC.OC_CLERK=O.O_CLERK,
    	    OC.OC_SHIPPRIORITY=O.O_SHIPPRIORITY,
    	    OC.OC_COMMENT=O.O_COMMENT
    WHEN NOT MATCHED
        AND O.METADATA$ACTION ='INSERT'
        THEN INSERT 
        (
        OC_ORDERKEY,
        OC_CUSTKEY,
        OC_ORDERSTATUS,
    	OC_TOTALPRICE,
    	OC_ORDERDATE,
    	OC_ORDERPRIORITY,
    	OC_CLERK,
    	OC_SHIPPRIORITY,
    	OC_COMMENT,
        OC_NAME,
        OC_PHONE
        )
        VALUES
        (
        O.O_ORDERKEY,
        O.O_CUSTKEY,
        O.O_ORDERSTATUS,
    	O.O_TOTALPRICE,
    	O.O_ORDERDATE,
    	O.O_ORDERPRIORITY,
    	O.O_CLERK,
    	O.O_SHIPPRIORITY,
    	O.O_COMMENT,
        O.C_NAME,
        O.C_PHONE
        );

SHOW TASKS;

ALTER TASK ALL_DATA_CHANGES RESUME;

SELECT * FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY()) ORDER BY SCHEDULED_TIME DESC;
